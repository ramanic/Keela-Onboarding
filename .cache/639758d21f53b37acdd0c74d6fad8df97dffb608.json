{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/raman/Desktop/Projects/Keela/notes/node_modules/vue-js-modal/src/components/Modal.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/Users/raman/Desktop/Projects/Keela/notes/node_modules/vue-js-modal/src/components/Modal.vue","filename":"/Users/raman/Desktop/Projects/Keela/notes/node_modules/vue-js-modal/src/components/Modal.vue","passPerPreset":false,"envName":"development","cwd":"/Users/raman/Desktop/Projects/Keela/notes","root":"/Users/raman/Desktop/Projects/Keela/notes","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/raman/Desktop/Projects/Keela/notes/node_modules/vue-js-modal/src/components/Modal.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/raman/Desktop/Projects/Keela/notes/node_modules/vue-js-modal/src/components/Modal.vue"}},"code":"var _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\n\nvar _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 1);\nvar Resizer;\nmodule.link(\"./Resizer.vue\", {\n  \"default\": function (v) {\n    Resizer = v;\n  }\n}, 0);\nvar isInput, inRange, getTouchEvent, blurActiveElement, windowWidthWithoutScrollbar, stringStylesToObject;\nmodule.link(\"../utils\", {\n  isInput: function (v) {\n    isInput = v;\n  },\n  inRange: function (v) {\n    inRange = v;\n  },\n  getTouchEvent: function (v) {\n    getTouchEvent = v;\n  },\n  blurActiveElement: function (v) {\n    blurActiveElement = v;\n  },\n  windowWidthWithoutScrollbar: function (v) {\n    windowWidthWithoutScrollbar = v;\n  },\n  stringStylesToObject: function (v) {\n    stringStylesToObject = v;\n  }\n}, 1);\nvar parseNumber, validateNumber;\nmodule.link(\"../utils/parser\", {\n  parseNumber: function (v) {\n    parseNumber = v;\n  },\n  validateNumber: function (v) {\n    validateNumber = v;\n  }\n}, 2);\nvar ResizeObserver;\nmodule.link(\"../utils/resizeObserver\", {\n  \"default\": function (v) {\n    ResizeObserver = v;\n  }\n}, 3);\nvar FocusTrap;\nmodule.link(\"../utils/focusTrap\", {\n  \"default\": function (v) {\n    FocusTrap = v;\n  }\n}, 4);\nvar defaultTransition = 'vm-transition--default';\nvar TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n};\nmodule.exportDefault({\n  name: 'VueJsModal',\n  props: {\n    name: {\n      required: true,\n      type: String\n    },\n    resizable: {\n      type: Boolean,\n      \"default\": false\n    },\n    resizeEdges: {\n      \"default\": function () {\n        return ['r', 'br', 'b', 'bl', 'l', 'tl', 't', 'tr'];\n      },\n      validator: function (val) {\n        return ['r', 'br', 'b', 'bl', 'l', 'tl', 't', 'tr'].filter(function (value) {\n          return val.indexOf(value) !== -1;\n        }).length === val.length;\n      },\n      type: Array\n    },\n    centerResize: {\n      type: Boolean,\n      \"default\": true\n    },\n    resizeIndicator: {\n      type: Boolean,\n      \"default\": true\n    },\n    adaptive: {\n      type: Boolean,\n      \"default\": false\n    },\n    draggable: {\n      type: [Boolean, String],\n      \"default\": false\n    },\n    scrollable: {\n      type: Boolean,\n      \"default\": false\n    },\n    focusTrap: {\n      type: Boolean,\n      \"default\": false\n    },\n    reset: {\n      type: Boolean,\n      \"default\": false\n    },\n    overlayTransition: {\n      type: String,\n      \"default\": 'vm-transition--overlay'\n    },\n    transition: {\n      type: String,\n      \"default\": 'vm-transition--modal'\n    },\n    clickToClose: {\n      type: Boolean,\n      \"default\": true\n    },\n    classes: {\n      type: [String, Array],\n      \"default\": function () {\n        return [];\n      }\n    },\n    styles: {\n      type: [String, Array, Object]\n    },\n    minWidth: {\n      type: Number,\n      \"default\": 0,\n      validator: function (value) {\n        return value >= 0;\n      }\n    },\n    minHeight: {\n      type: Number,\n      \"default\": 0,\n      validator: function (value) {\n        return value >= 0;\n      }\n    },\n    maxWidth: {\n      type: Number,\n      \"default\": Number.MAX_SAFE_INTEGER\n    },\n    maxHeight: {\n      type: Number,\n      \"default\": Number.MAX_SAFE_INTEGER\n    },\n    width: {\n      type: [Number, String],\n      \"default\": 600,\n      validator: function (value) {\n        return value === 'auto' || validateNumber(value);\n      }\n    },\n    height: {\n      type: [Number, String],\n      \"default\": 300,\n      validator: function (value) {\n        return value === 'auto' || validateNumber(value);\n      }\n    },\n    shiftX: {\n      type: Number,\n      \"default\": 0.5,\n      validator: function (value) {\n        return value >= 0 && value <= 1;\n      }\n    },\n    shiftY: {\n      type: Number,\n      \"default\": 0.5,\n      validator: function (value) {\n        return value >= 0 && value <= 1;\n      }\n    }\n  },\n  components: {\n    Resizer: Resizer\n  },\n  data: function () {\n    return {\n      visible: false,\n      visibility: {\n        modal: false,\n        overlay: false\n      },\n      overlayTransitionState: null,\n      modalTransitionState: null,\n      shiftLeft: 0,\n      shiftTop: 0,\n      modal: {\n        width: 0,\n        widthType: 'px',\n        height: 0,\n        heightType: 'px',\n        renderedHeight: 0\n      },\n      viewportHeight: 0,\n      viewportWidth: 0\n    };\n  },\n  created: function () {\n    this.setInitialSize();\n  },\n\n  /**\n   * Sets global listeners\n   */\n  beforeMount: function () {\n    this.$modal.subscription.$on('toggle', this.onToggle);\n    window.addEventListener('resize', this.onWindowResize);\n    window.addEventListener('orientationchange', this.onWindowResize);\n    this.onWindowResize();\n    /**\n     * Making sure that autoHeight is enabled when using \"scrollable\"\n     */\n\n    if (this.scrollable && !this.isAutoHeight) {\n      console.warn(\"Modal \\\"\" + this.name + \"\\\" has scrollable flag set to true \" + (\"but height is not \\\"auto\\\" (\" + this.height + \")\"));\n    }\n\n    if (this.clickToClose) {\n      window.addEventListener('keyup', this.onEscapeKeyUp);\n    }\n  },\n  mounted: function () {\n    var _this = this;\n\n    this.resizeObserver = new ResizeObserver(function (entries) {\n      if (entries.length > 0) {\n        var _entries = _slicedToArray(entries, 1),\n            entry = _entries[0];\n\n        _this.modal.renderedHeight = entry.contentRect.height;\n      }\n    });\n    this.$focusTrap = new FocusTrap();\n  },\n\n  /**\n   * Removes global listeners\n   */\n  beforeDestroy: function () {\n    this.$modal.subscription.$off('toggle', this.onToggle);\n    window.removeEventListener('resize', this.onWindowResize);\n    window.removeEventListener('orientationchange', this.onWindowResize);\n\n    if (this.clickToClose) {\n      window.removeEventListener('keyup', this.onEscapeKeyUp);\n    }\n    /**\n     * Removes blocked scroll\n     */\n\n\n    document.body.classList.remove('vm--block-scroll');\n  },\n  computed: {\n    /**\n     *  Because modal state is based on transitions - we need to make sure\n     * that there is always a transition for overlay/modal\n     **/\n    guaranteedOverlayTransition: function () {\n      return this.overlayTransition || defaultTransition;\n    },\n    guaranteedModalTransition: function () {\n      return this.transition || defaultTransition;\n    },\n\n    /**\n     * Returns true if height is set to \"auto\"\n     */\n    isAutoHeight: function () {\n      return this.modal.heightType === 'auto';\n    },\n\n    /**\n     * Calculates and returns modal position based on the\n     * pivots, window size and modal size\n     */\n    position: function () {\n      var viewportHeight = this.viewportHeight,\n          viewportWidth = this.viewportWidth,\n          shiftLeft = this.shiftLeft,\n          shiftTop = this.shiftTop,\n          shiftX = this.shiftX,\n          shiftY = this.shiftY,\n          trueModalWidth = this.trueModalWidth,\n          trueModalHeight = this.trueModalHeight;\n      var maxLeft = viewportWidth - trueModalWidth;\n      var maxTop = Math.max(viewportHeight - trueModalHeight, 0);\n      var left = shiftLeft + shiftX * maxLeft;\n      var top = shiftTop + shiftY * maxTop;\n      return {\n        left: parseInt(inRange(0, maxLeft, left)),\n        top: !trueModalHeight && this.isAutoHeight ? undefined : parseInt(inRange(0, maxTop, top))\n      };\n    },\n\n    /**\n     * Returns pixel width (if set with %) and makes sure that modal size\n     * fits the window\n     */\n    trueModalWidth: function () {\n      var viewportWidth = this.viewportWidth,\n          modal = this.modal,\n          adaptive = this.adaptive,\n          minWidth = this.minWidth,\n          maxWidth = this.maxWidth;\n      var value = modal.widthType === '%' ? viewportWidth / 100 * modal.width : modal.width;\n\n      if (adaptive) {\n        var max = Math.max(minWidth, Math.min(viewportWidth, maxWidth));\n        return inRange(minWidth, max, value);\n      }\n\n      return value;\n    },\n\n    /**\n     * Returns pixel height (if set with %) and makes sure that modal size\n     * fits the window.\n     *\n     * Returns modal.renderedHeight if height set as \"auto\"\n     */\n    trueModalHeight: function () {\n      var viewportHeight = this.viewportHeight,\n          modal = this.modal,\n          isAutoHeight = this.isAutoHeight,\n          adaptive = this.adaptive,\n          minHeight = this.minHeight,\n          maxHeight = this.maxHeight;\n      var value = modal.heightType === '%' ? viewportHeight / 100 * modal.height : modal.height;\n\n      if (isAutoHeight) {\n        // use renderedHeight when height 'auto'\n        return this.modal.renderedHeight;\n      }\n\n      if (adaptive) {\n        var max = Math.max(minHeight, Math.min(viewportHeight, maxHeight));\n        return inRange(minHeight, max, value);\n      }\n\n      return value;\n    },\n\n    /**\n     * Returns the height of the modal when in 'auto' mode, making sure the\n     * modal fits the viewport if 'adaptive' is also true\n     */\n    autoHeight: function () {\n      return this.adaptive && this.modal.renderedHeight >= this.viewportHeight ? Math.max(this.minHeight, this.viewportHeight) + 'px' : 'auto';\n    },\n    containerClass: function () {\n      return ['vm--container', this.scrollable && this.isAutoHeight && 'scrollable'];\n    },\n\n    /**\n     * Returns class list for modal itself\n     */\n    modalClass: function () {\n      return ['vm--modal', this.classes];\n    },\n    stylesProp: function () {\n      return typeof this.styles === 'string' ? stringStylesToObject(this.styles) : this.styles;\n    },\n\n    /**\n     * CSS styles for position and size of the modal\n     */\n    modalStyle: function () {\n      return [this.stylesProp, {\n        top: this.position.top + 'px',\n        left: this.position.left + 'px',\n        width: this.trueModalWidth + 'px',\n        height: this.isAutoHeight ? this.autoHeight : this.trueModalHeight + 'px'\n      }];\n    },\n    isComponentReadyToBeDestroyed: function () {\n      return this.overlayTransitionState === TransitionState.Leave && this.modalTransitionState === TransitionState.Leave;\n    }\n  },\n  watch: {\n    isComponentReadyToBeDestroyed: function (isReady) {\n      if (isReady) {\n        this.visible = false;\n      }\n    }\n  },\n  methods: {\n    startTransitionEnter: function () {\n      this.visibility.overlay = true;\n      this.visibility.modal = true;\n    },\n    startTransitionLeave: function () {\n      this.visibility.overlay = false;\n      this.visibility.modal = false;\n    },\n    beforeOverlayTransitionEnter: function () {\n      this.overlayTransitionState = TransitionState.Entering;\n    },\n    afterOverlayTransitionEnter: function () {\n      this.overlayTransitionState = TransitionState.Enter;\n    },\n    beforeOverlayTransitionLeave: function () {\n      this.overlayTransitionState = TransitionState.Leaving;\n    },\n    afterOverlayTransitionLeave: function () {\n      this.overlayTransitionState = TransitionState.Leave;\n    },\n    beforeModalTransitionEnter: function () {\n      var _this2 = this;\n\n      this.modalTransitionState = TransitionState.Entering;\n      this.$nextTick(function () {\n        _this2.resizeObserver.observe(_this2.$refs.modal);\n      });\n    },\n    afterModalTransitionEnter: function () {\n      /* Setup resize ovserver */\n      this.modalTransitionState = TransitionState.Enter;\n\n      if (this.draggable) {\n        this.addDraggableListeners();\n      }\n\n      if (this.focusTrap) {\n        this.$focusTrap.enable(this.$refs.modal);\n      }\n\n      var event = this.createModalEvent({\n        state: 'opened'\n      });\n      this.$emit('opened', event);\n    },\n    beforeModalTransitionLeave: function () {\n      this.modalTransitionState = TransitionState.Leaving;\n      this.resizeObserver.unobserve(this.$refs.modal);\n\n      if (this.$focusTrap.enabled()) {\n        this.$focusTrap.disable();\n      }\n    },\n    afterModalTransitionLeave: function () {\n      this.modalTransitionState = TransitionState.Leave;\n      var event = this.createModalEvent({\n        state: 'closed'\n      });\n      this.$emit('closed', event);\n    },\n    onToggle: function (name, state, params) {\n      if (this.name === name) {\n        var nextState = typeof state === 'undefined' ? !this.visible : state;\n        this.toggle(nextState, params);\n      }\n    },\n\n    /**\n     * Initializes modal's size & position,\n     * if \"reset\" flag is set to true - this function will be called\n     * every time \"beforeOpen\" is triggered\n     */\n    setInitialSize: function () {\n      var width = parseNumber(this.width);\n      var height = parseNumber(this.height);\n      this.modal.width = width.value;\n      this.modal.widthType = width.type;\n      this.modal.height = height.value;\n      this.modal.heightType = height.type;\n    },\n    onEscapeKeyUp: function (event) {\n      if (event.which === 27 && this.visible) {\n        this.$modal.hide(this.name);\n      }\n    },\n    onWindowResize: function () {\n      this.viewportWidth = windowWidthWithoutScrollbar();\n      this.viewportHeight = window.innerHeight;\n      this.ensureShiftInWindowBounds();\n    },\n\n    /**\n     * Generates event object\n     */\n    createModalEvent: function () {\n      var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _objectSpread({\n        name: this.name,\n        ref: this.$refs.modal || null\n      }, properties);\n    },\n\n    /**\n     * Event handler which is triggered on modal resize\n     */\n    onModalResize: function (event) {\n      this.modal.widthType = 'px';\n      this.modal.width = event.size.width;\n      this.modal.heightType = 'px';\n      this.modal.height = event.size.height; //Handle Shifting\n\n      if (!this.centerResize) {\n        this.shiftLeft = this.getResizedShiftLeft(event);\n        this.shiftTop = this.getResizedShiftTop(event);\n      }\n\n      var size = this.modal.size;\n      this.$emit('resize', this.createModalEvent({\n        size: size\n      }));\n    },\n\n    /**\n     * When centerResize is set to false, the modal has to be shifted so the position of the modal stays fixed.\n     * This method shifts the modal in the x direction.\n     */\n    getResizedShiftLeft: function (event) {\n      var viewportHeight = this.viewportHeight,\n          viewportWidth = this.viewportWidth,\n          trueModalWidth = this.trueModalWidth,\n          trueModalHeight = this.trueModalHeight;\n      var result = this.shiftLeft;\n\n      switch (event.direction) {\n        case 'vue-modal-topRight':\n        case 'vue-modal-bottomRight':\n        case 'vue-modal-right':\n          result = result + 0.5 * event.dimGrowth.width;\n          break;\n\n        case 'vue-modal-bottomLeft':\n        case 'vue-modal-topLeft':\n        case 'vue-modal-left':\n          result = result - 0.5 * event.dimGrowth.width;\n          break;\n\n        case 'vue-modal-top':\n        case 'vue-modal-bottom':\n          break;\n\n        default:\n          console.error('Could not Find Resize Direction In ShiftLeft');\n      }\n\n      return result;\n    },\n\n    /**\n     * When centerResize is set to false, the modal has to be shifted so the position of the modal stays fixed.\n     * This method shifts the modal in the y direction.\n     */\n    getResizedShiftTop: function (event) {\n      var viewportHeight = this.viewportHeight,\n          viewportWidth = this.viewportWidth,\n          trueModalWidth = this.trueModalWidth,\n          trueModalHeight = this.trueModalHeight;\n      var result = this.shiftTop;\n\n      switch (event.direction) {\n        case 'vue-modal-bottom':\n        case 'vue-modal-bottomRight':\n        case 'vue-modal-bottomLeft':\n          result = result + 0.5 * event.dimGrowth.height;\n          break;\n\n        case 'vue-modal-top':\n        case 'vue-modal-topRight':\n        case 'vue-modal-topLeft':\n          result = result - 0.5 * event.dimGrowth.height;\n          break;\n\n        case 'vue-modal-left':\n        case 'vue-modal-right':\n          break;\n\n        default:\n          console.error('Could not Find Resize Direction In ShiftTop');\n      }\n\n      return result;\n    },\n    open: function (params) {\n      var _this3 = this;\n\n      if (this.reset) {\n        this.setInitialSize();\n        this.shiftLeft = 0;\n        this.shiftTop = 0;\n      }\n\n      if (this.scrollable) {\n        document.body.classList.add('vm--block-scroll');\n      }\n\n      var cancelEvent = false;\n\n      var cancel = function () {\n        cancelEvent = true;\n      };\n\n      var event = this.createModalEvent({\n        cancel: cancel,\n        state: 'before-open',\n        params: params\n      });\n      this.$emit('before-open', event);\n\n      if (cancelEvent) {\n        if (this.scrollable) {\n          document.body.classList.remove('vm--block-scroll');\n        }\n\n        return;\n      }\n      /**\n       * Need to unfocus previously focused element, otherwise\n       * all keypress events (ESC press, for example) will trigger on that element.\n       */\n\n\n      blurActiveElement();\n      this.visible = true;\n      /* Making sure that entering tranition uses \"enter\" sequance instead of \"appear\" */\n\n      this.$nextTick(function () {\n        _this3.startTransitionEnter();\n      });\n    },\n    close: function (params) {\n      if (this.scrollable) {\n        document.body.classList.remove('vm--block-scroll');\n      }\n\n      var cancelEvent = false;\n\n      var cancel = function () {\n        cancelEvent = true;\n      };\n\n      var event = this.createModalEvent({\n        cancel: cancel,\n        state: 'before-close',\n        params: params\n      });\n      this.$emit('before-close', event);\n\n      if (cancelEvent) {\n        return;\n      }\n\n      this.startTransitionLeave();\n    },\n    toggle: function (isOpening, params) {\n      var visible = this.visible;\n\n      if (visible === isOpening) {\n        return;\n      }\n\n      if (isOpening) {\n        this.open(params);\n      } else {\n        this.close(params);\n      }\n    },\n    getDraggableElement: function () {\n      if (this.draggable === true) {\n        return this.$refs.modal;\n      }\n\n      if (typeof this.draggable === 'string') {\n        return this.$refs.modal.querySelector(this.draggable);\n      }\n\n      return null;\n    },\n\n    /**\n     * Event handler that is triggered when background overlay is clicked\n     */\n    onOverlayClick: function () {\n      if (this.clickToClose) {\n        this.toggle(false);\n      }\n    },\n    addDraggableListeners: function () {\n      var _this4 = this;\n\n      var dragger = this.getDraggableElement();\n\n      if (dragger) {\n        var startX = 0;\n        var startY = 0;\n        var initialShiftLeft = 0;\n        var initialShiftTop = 0;\n\n        var handleDraggableMousedown = function (event) {\n          var target = event.target;\n\n          if (isInput(target)) {\n            return;\n          }\n\n          var _getTouchEvent = getTouchEvent(event),\n              clientX = _getTouchEvent.clientX,\n              clientY = _getTouchEvent.clientY;\n\n          document.addEventListener('mousemove', _handleDraggableMousemove);\n          document.addEventListener('touchmove', _handleDraggableMousemove);\n          document.addEventListener('mouseup', _handleDraggableMouseup);\n          document.addEventListener('touchend', _handleDraggableMouseup);\n          startX = clientX;\n          startY = clientY;\n          initialShiftLeft = _this4.shiftLeft;\n          initialShiftTop = _this4.shiftTop;\n        };\n\n        var _handleDraggableMousemove = function (event) {\n          var _getTouchEvent2 = getTouchEvent(event),\n              clientX = _getTouchEvent2.clientX,\n              clientY = _getTouchEvent2.clientY;\n\n          _this4.shiftLeft = initialShiftLeft + clientX - startX;\n          _this4.shiftTop = initialShiftTop + clientY - startY;\n          event.preventDefault();\n        };\n\n        var _handleDraggableMouseup = function (event) {\n          _this4.ensureShiftInWindowBounds();\n\n          document.removeEventListener('mousemove', _handleDraggableMousemove);\n          document.removeEventListener('touchmove', _handleDraggableMousemove);\n          document.removeEventListener('mouseup', _handleDraggableMouseup);\n          document.removeEventListener('touchend', _handleDraggableMouseup);\n          event.preventDefault();\n        };\n\n        dragger.addEventListener('mousedown', handleDraggableMousedown);\n        dragger.addEventListener('touchstart', handleDraggableMousedown);\n      }\n    },\n    ensureShiftInWindowBounds: function () {\n      var viewportHeight = this.viewportHeight,\n          viewportWidth = this.viewportWidth,\n          shiftLeft = this.shiftLeft,\n          shiftTop = this.shiftTop,\n          shiftX = this.shiftX,\n          shiftY = this.shiftY,\n          trueModalWidth = this.trueModalWidth,\n          trueModalHeight = this.trueModalHeight;\n      var maxLeft = viewportWidth - trueModalWidth;\n      var maxTop = Math.max(viewportHeight - trueModalHeight, 0);\n      var left = shiftLeft + shiftX * maxLeft;\n      var top = shiftTop + shiftY * maxTop;\n      this.shiftLeft -= left - inRange(0, maxLeft, left);\n      this.shiftTop -= top - inRange(0, maxTop, top);\n    }\n  }\n});","map":{"version":3,"sources":["/Users/raman/Desktop/Projects/Keela/notes/node_modules/vue-js-modal/src/components/Modal.vue"],"names":["_objectSpread","module","link","default","v","_slicedToArray","Resizer","isInput","inRange","getTouchEvent","blurActiveElement","windowWidthWithoutScrollbar","stringStylesToObject","parseNumber","validateNumber","ResizeObserver","FocusTrap","defaultTransition","TransitionState","Enter","Entering","Leave","Leaving","exportDefault","name","props","required","type","String","resizable","Boolean","resizeEdges","validator","val","filter","value","indexOf","length","Array","centerResize","resizeIndicator","adaptive","draggable","scrollable","focusTrap","reset","overlayTransition","transition","clickToClose","classes","styles","Object","minWidth","Number","minHeight","maxWidth","MAX_SAFE_INTEGER","maxHeight","width","height","shiftX","shiftY","components","data","visible","visibility","modal","overlay","overlayTransitionState","modalTransitionState","shiftLeft","shiftTop","widthType","heightType","renderedHeight","viewportHeight","viewportWidth","created","setInitialSize","beforeMount","$modal","subscription","$on","onToggle","window","addEventListener","onWindowResize","isAutoHeight","console","warn","onEscapeKeyUp","mounted","resizeObserver","entries","entry","contentRect","$focusTrap","beforeDestroy","$off","removeEventListener","document","body","classList","remove","computed","guaranteedOverlayTransition","guaranteedModalTransition","position","trueModalWidth","trueModalHeight","maxLeft","maxTop","Math","max","left","top","parseInt","undefined","min","autoHeight","containerClass","modalClass","stylesProp","modalStyle","isComponentReadyToBeDestroyed","watch","isReady","methods","startTransitionEnter","startTransitionLeave","beforeOverlayTransitionEnter","afterOverlayTransitionEnter","beforeOverlayTransitionLeave","afterOverlayTransitionLeave","beforeModalTransitionEnter","$nextTick","observe","$refs","afterModalTransitionEnter","addDraggableListeners","enable","event","createModalEvent","state","$emit","beforeModalTransitionLeave","unobserve","enabled","disable","afterModalTransitionLeave","params","nextState","toggle","which","hide","innerHeight","ensureShiftInWindowBounds","properties","ref","onModalResize","size","getResizedShiftLeft","getResizedShiftTop","result","direction","dimGrowth","error","open","add","cancelEvent","cancel","close","isOpening","getDraggableElement","querySelector","onOverlayClick","dragger","startX","startY","initialShiftLeft","initialShiftTop","handleDraggableMousedown","target","clientX","clientY","handleDraggableMousemove","handleDraggableMouseup","preventDefault"],"mappings":"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","sourcesContent":["\nimport Resizer from './Resizer.vue'\nimport {\n  isInput,\n  inRange,\n  getTouchEvent,\n  blurActiveElement,\n  windowWidthWithoutScrollbar,\n  stringStylesToObject\n} from '../utils'\nimport { parseNumber, validateNumber } from '../utils/parser'\nimport ResizeObserver from '../utils/resizeObserver'\nimport FocusTrap from '../utils/focusTrap'\n\nconst defaultTransition = 'vm-transition--default'\n\nconst TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n}\n\nexport default {\n  name: 'VueJsModal',\n  props: {\n    name: {\n      required: true,\n      type: String\n    },\n    resizable: {\n      type: Boolean,\n      default: false\n    },\n    resizeEdges: {\n      default: () => ['r', 'br', 'b', 'bl', 'l', 'tl', 't', 'tr'],\n      validator: val =>\n        ['r', 'br', 'b', 'bl', 'l', 'tl', 't', 'tr'].filter(\n          value => val.indexOf(value) !== -1\n        ).length === val.length,\n      type: Array\n    },\n    centerResize: {\n      type: Boolean,\n      default: true\n    },\n    resizeIndicator: {\n      type: Boolean,\n      default: true\n    },\n    adaptive: {\n      type: Boolean,\n      default: false\n    },\n    draggable: {\n      type: [Boolean, String],\n      default: false\n    },\n    scrollable: {\n      type: Boolean,\n      default: false\n    },\n    focusTrap: {\n      type: Boolean,\n      default: false\n    },\n    reset: {\n      type: Boolean,\n      default: false\n    },\n    overlayTransition: {\n      type: String,\n      default: 'vm-transition--overlay'\n    },\n    transition: {\n      type: String,\n      default: 'vm-transition--modal'\n    },\n    clickToClose: {\n      type: Boolean,\n      default: true\n    },\n    classes: {\n      type: [String, Array],\n      default: () => []\n    },\n    styles: {\n      type: [String, Array, Object]\n    },\n    minWidth: {\n      type: Number,\n      default: 0,\n      validator(value) {\n        return value >= 0\n      }\n    },\n    minHeight: {\n      type: Number,\n      default: 0,\n      validator(value) {\n        return value >= 0\n      }\n    },\n    maxWidth: {\n      type: Number,\n      default: Number.MAX_SAFE_INTEGER\n    },\n    maxHeight: {\n      type: Number,\n      default: Number.MAX_SAFE_INTEGER\n    },\n    width: {\n      type: [Number, String],\n      default: 600,\n      validator(value) {\n        return value === 'auto' || validateNumber(value)\n      }\n    },\n    height: {\n      type: [Number, String],\n      default: 300,\n      validator(value) {\n        return value === 'auto' || validateNumber(value)\n      }\n    },\n    shiftX: {\n      type: Number,\n      default: 0.5,\n      validator(value) {\n        return value >= 0 && value <= 1\n      }\n    },\n    shiftY: {\n      type: Number,\n      default: 0.5,\n      validator(value) {\n        return value >= 0 && value <= 1\n      }\n    }\n  },\n  components: {\n    Resizer\n  },\n  data() {\n    return {\n      visible: false,\n\n      visibility: {\n        modal: false,\n        overlay: false\n      },\n\n      overlayTransitionState: null,\n      modalTransitionState: null,\n\n      shiftLeft: 0,\n      shiftTop: 0,\n\n      modal: {\n        width: 0,\n        widthType: 'px',\n        height: 0,\n        heightType: 'px',\n        renderedHeight: 0\n      },\n\n      viewportHeight: 0,\n      viewportWidth: 0\n    }\n  },\n  created() {\n    this.setInitialSize()\n  },\n  /**\n   * Sets global listeners\n   */\n  beforeMount() {\n    this.$modal.subscription.$on('toggle', this.onToggle)\n\n    window.addEventListener('resize', this.onWindowResize)\n    window.addEventListener('orientationchange', this.onWindowResize)\n\n    this.onWindowResize()\n    /**\n     * Making sure that autoHeight is enabled when using \"scrollable\"\n     */\n    if (this.scrollable && !this.isAutoHeight) {\n      console.warn(\n        `Modal \"${this.name}\" has scrollable flag set to true ` +\n          `but height is not \"auto\" (${this.height})`\n      )\n    }\n\n    if (this.clickToClose) {\n      window.addEventListener('keyup', this.onEscapeKeyUp)\n    }\n  },\n  mounted() {\n    this.resizeObserver = new ResizeObserver(entries => {\n      if (entries.length > 0) {\n        const [entry] = entries\n\n        this.modal.renderedHeight = entry.contentRect.height\n      }\n    })\n\n    this.$focusTrap = new FocusTrap()\n  },\n  /**\n   * Removes global listeners\n   */\n  beforeDestroy() {\n    this.$modal.subscription.$off('toggle', this.onToggle)\n\n    window.removeEventListener('resize', this.onWindowResize)\n    window.removeEventListener('orientationchange', this.onWindowResize)\n\n    if (this.clickToClose) {\n      window.removeEventListener('keyup', this.onEscapeKeyUp)\n    }\n    /**\n     * Removes blocked scroll\n     */\n    document.body.classList.remove('vm--block-scroll')\n  },\n  computed: {\n    /**\n     *  Because modal state is based on transitions - we need to make sure\n     * that there is always a transition for overlay/modal\n     **/\n    guaranteedOverlayTransition() {\n      return this.overlayTransition || defaultTransition\n    },\n\n    guaranteedModalTransition() {\n      return this.transition || defaultTransition\n    },\n\n    /**\n     * Returns true if height is set to \"auto\"\n     */\n    isAutoHeight() {\n      return this.modal.heightType === 'auto'\n    },\n    /**\n     * Calculates and returns modal position based on the\n     * pivots, window size and modal size\n     */\n    position() {\n      const {\n        viewportHeight,\n        viewportWidth,\n        shiftLeft,\n        shiftTop,\n        shiftX,\n        shiftY,\n        trueModalWidth,\n        trueModalHeight\n      } = this\n\n      const maxLeft = viewportWidth - trueModalWidth\n      const maxTop = Math.max(viewportHeight - trueModalHeight, 0)\n\n      const left = shiftLeft + shiftX * maxLeft\n      const top = shiftTop + shiftY * maxTop\n\n      return {\n        left: parseInt(inRange(0, maxLeft, left)),\n        top:\n          !trueModalHeight && this.isAutoHeight\n            ? undefined\n            : parseInt(inRange(0, maxTop, top))\n      }\n    },\n    /**\n     * Returns pixel width (if set with %) and makes sure that modal size\n     * fits the window\n     */\n    trueModalWidth() {\n      const { viewportWidth, modal, adaptive, minWidth, maxWidth } = this\n\n      const value =\n        modal.widthType === '%'\n          ? (viewportWidth / 100) * modal.width\n          : modal.width\n\n      if (adaptive) {\n        const max = Math.max(minWidth, Math.min(viewportWidth, maxWidth))\n        return inRange(minWidth, max, value)\n      }\n\n      return value\n    },\n    /**\n     * Returns pixel height (if set with %) and makes sure that modal size\n     * fits the window.\n     *\n     * Returns modal.renderedHeight if height set as \"auto\"\n     */\n    trueModalHeight() {\n      const {\n        viewportHeight,\n        modal,\n        isAutoHeight,\n        adaptive,\n        minHeight,\n        maxHeight\n      } = this\n\n      const value =\n        modal.heightType === '%'\n          ? (viewportHeight / 100) * modal.height\n          : modal.height\n\n      if (isAutoHeight) {\n        // use renderedHeight when height 'auto'\n        return this.modal.renderedHeight\n      }\n\n      if (adaptive) {\n        const max = Math.max(minHeight, Math.min(viewportHeight, maxHeight))\n\n        return inRange(minHeight, max, value)\n      }\n\n      return value\n    },\n\n    /**\n     * Returns the height of the modal when in 'auto' mode, making sure the\n     * modal fits the viewport if 'adaptive' is also true\n     */\n    autoHeight() {\n      return this.adaptive && this.modal.renderedHeight >= this.viewportHeight\n        ? Math.max(this.minHeight, this.viewportHeight) + 'px'\n        : 'auto'\n    },\n\n    containerClass() {\n      return [\n        'vm--container',\n        this.scrollable && this.isAutoHeight && 'scrollable'\n      ]\n    },\n\n    /**\n     * Returns class list for modal itself\n     */\n    modalClass() {\n      return ['vm--modal', this.classes]\n    },\n\n    stylesProp() {\n      return typeof this.styles === 'string'\n        ? stringStylesToObject(this.styles)\n        : this.styles\n    },\n    /**\n     * CSS styles for position and size of the modal\n     */\n    modalStyle() {\n      return [\n        this.stylesProp,\n        {\n          top: this.position.top + 'px',\n          left: this.position.left + 'px',\n          width: this.trueModalWidth + 'px',\n          height: this.isAutoHeight\n            ? this.autoHeight\n            : this.trueModalHeight + 'px'\n        }\n      ]\n    },\n\n    isComponentReadyToBeDestroyed() {\n      return (\n        this.overlayTransitionState === TransitionState.Leave &&\n        this.modalTransitionState === TransitionState.Leave\n      )\n    }\n  },\n\n  watch: {\n    isComponentReadyToBeDestroyed(isReady) {\n      if (isReady) {\n        this.visible = false\n      }\n    }\n  },\n\n  methods: {\n    startTransitionEnter() {\n      this.visibility.overlay = true\n      this.visibility.modal = true\n    },\n\n    startTransitionLeave() {\n      this.visibility.overlay = false\n      this.visibility.modal = false\n    },\n\n    beforeOverlayTransitionEnter() {\n      this.overlayTransitionState = TransitionState.Entering\n    },\n\n    afterOverlayTransitionEnter() {\n      this.overlayTransitionState = TransitionState.Enter\n    },\n\n    beforeOverlayTransitionLeave() {\n      this.overlayTransitionState = TransitionState.Leaving\n    },\n\n    afterOverlayTransitionLeave() {\n      this.overlayTransitionState = TransitionState.Leave\n    },\n\n    beforeModalTransitionEnter() {\n      this.modalTransitionState = TransitionState.Entering\n\n      this.$nextTick(() => {\n        this.resizeObserver.observe(this.$refs.modal)\n      })\n    },\n\n    afterModalTransitionEnter() {\n      /* Setup resize ovserver */\n      this.modalTransitionState = TransitionState.Enter\n\n      if (this.draggable) {\n        this.addDraggableListeners()\n      }\n\n      if (this.focusTrap) {\n        this.$focusTrap.enable(this.$refs.modal)\n      }\n\n      const event = this.createModalEvent({\n        state: 'opened'\n      })\n\n      this.$emit('opened', event)\n    },\n\n    beforeModalTransitionLeave() {\n      this.modalTransitionState = TransitionState.Leaving\n      this.resizeObserver.unobserve(this.$refs.modal)\n\n      if (this.$focusTrap.enabled()) {\n        this.$focusTrap.disable()\n      }\n    },\n\n    afterModalTransitionLeave() {\n      this.modalTransitionState = TransitionState.Leave\n\n      const event = this.createModalEvent({\n        state: 'closed'\n      })\n\n      this.$emit('closed', event)\n    },\n\n    onToggle(name, state, params) {\n      if (this.name === name) {\n        const nextState = typeof state === 'undefined' ? !this.visible : state\n\n        this.toggle(nextState, params)\n      }\n    },\n    /**\n     * Initializes modal's size & position,\n     * if \"reset\" flag is set to true - this function will be called\n     * every time \"beforeOpen\" is triggered\n     */\n    setInitialSize() {\n      const width = parseNumber(this.width)\n      const height = parseNumber(this.height)\n\n      this.modal.width = width.value\n      this.modal.widthType = width.type\n      this.modal.height = height.value\n      this.modal.heightType = height.type\n    },\n\n    onEscapeKeyUp(event) {\n      if (event.which === 27 && this.visible) {\n        this.$modal.hide(this.name)\n      }\n    },\n\n    onWindowResize() {\n      this.viewportWidth = windowWidthWithoutScrollbar()\n      this.viewportHeight = window.innerHeight\n\n      this.ensureShiftInWindowBounds()\n    },\n    /**\n     * Generates event object\n     */\n    createModalEvent(properties = {}) {\n      return {\n        name: this.name,\n        ref: this.$refs.modal || null,\n        ...properties\n      }\n    },\n    /**\n     * Event handler which is triggered on modal resize\n     */\n    onModalResize(event) {\n      this.modal.widthType = 'px'\n      this.modal.width = event.size.width\n\n      this.modal.heightType = 'px'\n      this.modal.height = event.size.height\n      //Handle Shifting\n      if (!this.centerResize) {\n        this.shiftLeft = this.getResizedShiftLeft(event)\n        this.shiftTop = this.getResizedShiftTop(event)\n      }\n\n      const { size } = this.modal\n\n      this.$emit(\n        'resize',\n        this.createModalEvent({\n          size\n        })\n      )\n    },\n\n    /**\n     * When centerResize is set to false, the modal has to be shifted so the position of the modal stays fixed.\n     * This method shifts the modal in the x direction.\n     */\n    getResizedShiftLeft(event) {\n      const {\n        viewportHeight,\n        viewportWidth,\n        trueModalWidth,\n        trueModalHeight\n      } = this\n\n      let result = this.shiftLeft\n\n      switch (event.direction) {\n        case 'vue-modal-topRight':\n        case 'vue-modal-bottomRight':\n        case 'vue-modal-right':\n          result = result + 0.5 * event.dimGrowth.width\n          break\n        case 'vue-modal-bottomLeft':\n        case 'vue-modal-topLeft':\n        case 'vue-modal-left':\n          result = result - 0.5 * event.dimGrowth.width\n          break\n        case 'vue-modal-top':\n        case 'vue-modal-bottom':\n          break\n        default:\n          console.error('Could not Find Resize Direction In ShiftLeft')\n      }\n\n      return result\n    },\n    /**\n     * When centerResize is set to false, the modal has to be shifted so the position of the modal stays fixed.\n     * This method shifts the modal in the y direction.\n     */\n    getResizedShiftTop(event) {\n      const {\n        viewportHeight,\n        viewportWidth,\n        trueModalWidth,\n        trueModalHeight\n      } = this\n\n      let result = this.shiftTop\n\n      switch (event.direction) {\n        case 'vue-modal-bottom':\n        case 'vue-modal-bottomRight':\n        case 'vue-modal-bottomLeft':\n          result = result + 0.5 * event.dimGrowth.height\n          break\n        case 'vue-modal-top':\n        case 'vue-modal-topRight':\n        case 'vue-modal-topLeft':\n          result = result - 0.5 * event.dimGrowth.height\n          break\n        case 'vue-modal-left':\n        case 'vue-modal-right':\n          break\n        default:\n          console.error('Could not Find Resize Direction In ShiftTop')\n      }\n      return result\n    },\n    open(params) {\n      if (this.reset) {\n        this.setInitialSize()\n\n        this.shiftLeft = 0\n        this.shiftTop = 0\n      }\n\n      if (this.scrollable) {\n        document.body.classList.add('vm--block-scroll')\n      }\n\n      let cancelEvent = false\n\n      const cancel = () => {\n        cancelEvent = true\n      }\n\n      const event = this.createModalEvent({\n        cancel,\n        state: 'before-open',\n        params\n      })\n\n      this.$emit('before-open', event)\n\n      if (cancelEvent) {\n        if (this.scrollable) {\n          document.body.classList.remove('vm--block-scroll')\n        }\n\n        return\n      }\n      /**\n       * Need to unfocus previously focused element, otherwise\n       * all keypress events (ESC press, for example) will trigger on that element.\n       */\n      blurActiveElement()\n\n      this.visible = true\n      /* Making sure that entering tranition uses \"enter\" sequance instead of \"appear\" */\n      this.$nextTick(() => {\n        this.startTransitionEnter()\n      })\n    },\n\n    close(params) {\n      if (this.scrollable) {\n        document.body.classList.remove('vm--block-scroll')\n      }\n\n      let cancelEvent = false\n\n      const cancel = () => {\n        cancelEvent = true\n      }\n\n      const event = this.createModalEvent({\n        cancel,\n        state: 'before-close',\n        params\n      })\n\n      this.$emit('before-close', event)\n\n      if (cancelEvent) {\n        return\n      }\n\n      this.startTransitionLeave()\n    },\n\n    toggle(isOpening, params) {\n      const { visible } = this\n\n      if (visible === isOpening) {\n        return\n      }\n\n      if (isOpening) {\n        this.open(params)\n      } else {\n        this.close(params)\n      }\n    },\n\n    getDraggableElement() {\n      if (this.draggable === true) {\n        return this.$refs.modal\n      }\n\n      if (typeof this.draggable === 'string') {\n        return this.$refs.modal.querySelector(this.draggable)\n      }\n\n      return null\n    },\n\n    /**\n     * Event handler that is triggered when background overlay is clicked\n     */\n    onOverlayClick() {\n      if (this.clickToClose) {\n        this.toggle(false)\n      }\n    },\n\n    addDraggableListeners() {\n      const dragger = this.getDraggableElement()\n\n      if (dragger) {\n        let startX = 0\n        let startY = 0\n        let initialShiftLeft = 0\n        let initialShiftTop = 0\n\n        const handleDraggableMousedown = event => {\n          let target = event.target\n\n          if (isInput(target)) {\n            return\n          }\n\n          let { clientX, clientY } = getTouchEvent(event)\n\n          document.addEventListener('mousemove', handleDraggableMousemove)\n          document.addEventListener('touchmove', handleDraggableMousemove)\n\n          document.addEventListener('mouseup', handleDraggableMouseup)\n          document.addEventListener('touchend', handleDraggableMouseup)\n\n          startX = clientX\n          startY = clientY\n\n          initialShiftLeft = this.shiftLeft\n          initialShiftTop = this.shiftTop\n        }\n\n        const handleDraggableMousemove = event => {\n          let { clientX, clientY } = getTouchEvent(event)\n\n          this.shiftLeft = initialShiftLeft + clientX - startX\n          this.shiftTop = initialShiftTop + clientY - startY\n\n          event.preventDefault()\n        }\n\n        const handleDraggableMouseup = event => {\n          this.ensureShiftInWindowBounds()\n\n          document.removeEventListener('mousemove', handleDraggableMousemove)\n          document.removeEventListener('touchmove', handleDraggableMousemove)\n\n          document.removeEventListener('mouseup', handleDraggableMouseup)\n          document.removeEventListener('touchend', handleDraggableMouseup)\n\n          event.preventDefault()\n        }\n\n        dragger.addEventListener('mousedown', handleDraggableMousedown)\n        dragger.addEventListener('touchstart', handleDraggableMousedown)\n      }\n    },\n\n    ensureShiftInWindowBounds() {\n      const {\n        viewportHeight,\n        viewportWidth,\n        shiftLeft,\n        shiftTop,\n        shiftX,\n        shiftY,\n        trueModalWidth,\n        trueModalHeight\n      } = this\n\n      const maxLeft = viewportWidth - trueModalWidth\n      const maxTop = Math.max(viewportHeight - trueModalHeight, 0)\n\n      const left = shiftLeft + shiftX * maxLeft\n      const top = shiftTop + shiftY * maxTop\n\n      this.shiftLeft -= left - inRange(0, maxLeft, left)\n      this.shiftTop -= top - inRange(0, maxTop, top)\n    }\n  }\n}\n"]},"sourceType":"module","hash":"639758d21f53b37acdd0c74d6fad8df97dffb608"}
