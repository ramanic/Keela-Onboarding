{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/raman/Desktop/Projects/Keela/notes/imports/ui/components/Contacts.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/Users/raman/Desktop/Projects/Keela/notes/imports/ui/components/Contacts.vue","filename":"/Users/raman/Desktop/Projects/Keela/notes/imports/ui/components/Contacts.vue","passPerPreset":false,"envName":"development","cwd":"/Users/raman/Desktop/Projects/Keela/notes","root":"/Users/raman/Desktop/Projects/Keela/notes","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/raman/Desktop/Projects/Keela/notes/imports/ui/components/Contacts.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/raman/Desktop/Projects/Keela/notes/imports/ui/components/Contacts.vue"}},"code":"var _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nvar Vue;\nmodule.link(\"vue\", {\n  \"default\": function (v) {\n    Vue = v;\n  }\n}, 0);\nvar OrganizationsCollection;\nmodule.link(\"./../../api/collections\", {\n  OrganizationsCollection: function (v) {\n    OrganizationsCollection = v;\n  }\n}, 1);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nmodule.exportDefault({\n  data: function () {\n    return {\n      mUser: {\n        _id: 1\n      },\n      name: '',\n      email: '',\n      organization: {},\n      contacts: [],\n      tags: [],\n      tagsOptions: [],\n      contactToUpdate: {\n        name: '',\n        email: ''\n      },\n      addedTag: ''\n    };\n  },\n  created: function () {\n    this.getContacts();\n    this.getTags();\n    this.mUser = Meteor.users.findOne({\n      _id: Meteor.user()._id\n    }, {\n      fields: {\n        role: 1,\n        organization: 1\n      }\n    });\n    var org = OrganizationsCollection.find({\n      _id: this.mUser.organization\n    }).fetch();\n    this.organization = org[0];\n    console.log('Org', this.organization);\n  },\n  methods: {\n    updateContactShow: function (data) {\n      this.$modal.show('contact-update');\n      this.contactToUpdate = _objectSpread({}, data);\n    },\n    addTagShow: function (data) {\n      var _this = this;\n\n      this.$modal.show('add-tag');\n      this.contactToUpdate = _objectSpread({}, data);\n      this.tagsOptions = this.tags.filter(function (tag) {\n        return !_this.contactToUpdate.tagIds.includes(tag._id);\n      });\n\n      if (!this.contactToUpdate.tagIds) {\n        this.contactToUpdate.tagIds = [];\n      }\n    },\n    deleteContact: function (id) {\n      var _this2 = this;\n\n      Meteor.call('contacts.delete', id, function (err, res) {\n        if (err) {\n          console.log(err);\n        } else {\n          console.log(res);\n\n          _this2.getContacts();\n        }\n      });\n    },\n    addContacts: function () {\n      var _this3 = this;\n\n      if (this.name != '' & this.email != '') {\n        Meteor.call('contacts.insert', this.name, this.email, function (err, res) {\n          if (err) {\n            console.log(err);\n          } else {\n            _this3.getContacts();\n\n            console.log(res);\n          }\n        });\n        this.name = '';\n        this.email = '';\n      }\n    },\n    getContacts: function () {\n      var _this4 = this;\n\n      Meteor.call('contacts.view', function (err, res) {\n        if (err) {\n          console.log(err);\n        } else {\n          _this4.contacts = res;\n          console.log('contacts', _this4.contacts);\n        }\n      });\n    },\n    updateContacts: function () {\n      var _this5 = this;\n\n      Meteor.call('contacts.update', this.contactToUpdate, function (err, res) {\n        if (err) {\n          console.log(err);\n        } else {\n          _this5.getContacts();\n\n          _this5.$modal.hide('contact-update');\n\n          console.log(res);\n        }\n      });\n    },\n    addTags: function () {\n      var _this6 = this;\n\n      if (this.name != '') {\n        Meteor.call('tags.insert', this.name, function (err, res) {\n          if (err) {\n            console.log(err);\n          } else {\n            _this6.getTags();\n\n            console.log(res);\n          }\n        });\n        this.name = '';\n      }\n    },\n    getTags: function () {\n      var _this7 = this;\n\n      Meteor.call('tags.view', function (err, res) {\n        if (err) {\n          console.log(err);\n        } else {\n          _this7.tags = res;\n          console.log('tags', _this7.tags);\n        }\n      });\n    },\n    addTagsToContact: function () {\n      var _this8 = this;\n\n      if (this.addedTag) {\n        this.contactToUpdate.tagIds.push(this.addedTag);\n        Meteor.call('contacts.addTags', this.contactToUpdate._id, this.contactToUpdate.tagIds, function (err, res) {\n          if (err) {\n            console.log(err);\n          } else {\n            _this8.getContacts();\n\n            _this8.tagsOptions = _this8.tags.filter(function (tag) {\n              return !_this8.contactToUpdate.tagIds.includes(tag._id);\n            });\n          }\n        });\n      }\n    },\n    getTagName: function (id) {\n      var tag = this.tags.find(function (tag) {\n        return tag._id === id;\n      });\n      return tag.name || '';\n    }\n  }\n});","map":{"version":3,"sources":["/Users/raman/Desktop/Projects/Keela/notes/imports/ui/components/Contacts.vue"],"names":["_objectSpread","module","link","default","v","Vue","OrganizationsCollection","Meteor","exportDefault","data","mUser","_id","name","email","organization","contacts","tags","tagsOptions","contactToUpdate","addedTag","created","getContacts","getTags","users","findOne","user","fields","role","org","find","fetch","console","log","methods","updateContactShow","$modal","show","addTagShow","filter","tag","tagIds","includes","deleteContact","id","call","err","res","addContacts","updateContacts","hide","addTags","addTagsToContact","push","getTagName"],"mappings":"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","sourcesContent":["\nimport Vue from 'vue';\nimport { OrganizationsCollection } from './../../api/collections';\nimport { Meteor } from 'meteor/meteor';\n\nexport default {\n  data() {\n    return {\n      mUser: { _id: 1 },\n      name: '',\n      email: '',\n      organization: {},\n      contacts: [],\n      tags: [],\n      tagsOptions: [],\n\n      contactToUpdate: {\n        name: '',\n        email: '',\n      },\n      addedTag: '',\n    };\n  },\n  created() {\n    this.getContacts();\n    this.getTags();\n    this.mUser = Meteor.users.findOne(\n      { _id: Meteor.user()._id },\n      { fields: { role: 1, organization: 1 } }\n    );\n    let org = OrganizationsCollection.find({\n      _id: this.mUser.organization,\n    }).fetch();\n    this.organization = org[0];\n    console.log('Org', this.organization);\n  },\n\n  methods: {\n    updateContactShow(data) {\n      this.$modal.show('contact-update');\n      this.contactToUpdate = { ...data };\n    },\n    addTagShow(data) {\n      this.$modal.show('add-tag');\n      this.contactToUpdate = { ...data };\n      this.tagsOptions = this.tags.filter((tag) => {\n        return !this.contactToUpdate.tagIds.includes(tag._id);\n      });\n      if (!this.contactToUpdate.tagIds) {\n        this.contactToUpdate.tagIds = [];\n      }\n    },\n\n    deleteContact(id) {\n      Meteor.call('contacts.delete', id, (err, res) => {\n        if (err) {\n          console.log(err);\n        } else {\n          console.log(res);\n          this.getContacts();\n        }\n      });\n    },\n\n    addContacts() {\n      if ((this.name != '') & (this.email != '')) {\n        Meteor.call('contacts.insert', this.name, this.email, (err, res) => {\n          if (err) {\n            console.log(err);\n          } else {\n            this.getContacts();\n            console.log(res);\n          }\n        });\n        this.name = '';\n        this.email = '';\n      }\n    },\n    getContacts() {\n      Meteor.call('contacts.view', (err, res) => {\n        if (err) {\n          console.log(err);\n        } else {\n          this.contacts = res;\n          console.log('contacts', this.contacts);\n        }\n      });\n    },\n    updateContacts() {\n      Meteor.call('contacts.update', this.contactToUpdate, (err, res) => {\n        if (err) {\n          console.log(err);\n        } else {\n          this.getContacts();\n          this.$modal.hide('contact-update');\n          console.log(res);\n        }\n      });\n    },\n    addTags() {\n      if (this.name != '') {\n        Meteor.call('tags.insert', this.name, (err, res) => {\n          if (err) {\n            console.log(err);\n          } else {\n            this.getTags();\n            console.log(res);\n          }\n        });\n        this.name = '';\n      }\n    },\n    getTags() {\n      Meteor.call('tags.view', (err, res) => {\n        if (err) {\n          console.log(err);\n        } else {\n          this.tags = res;\n          console.log('tags', this.tags);\n        }\n      });\n    },\n    addTagsToContact() {\n      if (this.addedTag) {\n        this.contactToUpdate.tagIds.push(this.addedTag);\n\n        Meteor.call(\n          'contacts.addTags',\n          this.contactToUpdate._id,\n          this.contactToUpdate.tagIds,\n          (err, res) => {\n            if (err) {\n              console.log(err);\n            } else {\n              this.getContacts();\n              this.tagsOptions = this.tags.filter((tag) => {\n                return !this.contactToUpdate.tagIds.includes(tag._id);\n              });\n            }\n          }\n        );\n      }\n    },\n    getTagName(id) {\n      let tag = this.tags.find((tag) => {\n        return tag._id === id;\n      });\n      return tag.name || '';\n    },\n  },\n};\n"]},"sourceType":"module","hash":"5c3546e83f9c0563a6412d3e43623ba5b196194b"}
